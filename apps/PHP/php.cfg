#!/bin/bash
############################
## PHP (scripting language)
PHP_CLI_CONFIG="/etc/php/7.0/cli/php.ini"
#PHP_CGI_CONFIG="/etc/php5/cgi/php.ini"
PHP_APACHE2_CONFIG="/etc/php/7.0/apache2/php.ini"

## Install PHP and add-ons
#install_pkg php5-cgi
install_pkg "php-cli"
install_pkg "php-fpm"
install_pkg "php-mbstring"
install_pkg "php-mcrypt"
install_pkg "php-zip"
install_pkg "php-curl"
install_pkg "php-gd"
install_pkg "php-mysqlnd"
install_pkg "php-dom"
#install_pkg "php-geoip"
#install_pkg "php-imap"
install_pkg "composer"

## Update config files
replace_line ";date.timezone =" "date.timezone = \"Europe/Stockholm\"" $PHP_CLI_CONFIG
replace_line ";date.timezone =" "date.timezone = \"Europe/Stockholm\"" $PHP_APACHE2_CONFIG
replace_line "upload_max_filesize = " "upload_max_filesize = 10M" $PHP_APACHE2_CONFIG
#replace_line ";date.timezone =" "date.timezone = \"Europe/Stockholm\"" $PHP_FPM_CONFIG

## Update php.ini to be used by webserver
#replace_line ";cgi.fix_pathinfo=1" "cgi.fix_pathinfo=1" $PHP_CLI_CONFIG
#replace_line ";cgi.fix_pathinfo=1" "cgi.fix_pathinfo=1" $PHP_CGI_CONFIG
#replace_line ";cgi.fix_pathinfo=1" "cgi.fix_pathinfo=1" $PHP_FPM_CONFIG

## Download Composer framework
## Requires PHP CLI to be installed
#COMPOSER_SIG=$(curl "https://composer.github.io/installer.sig")
#COMPOSER_AUTH="/root/.config/composer/auth.json"

#if(php -r "readfile('https://getcomposer.org/installer');" > composer-setup.php)
#then
#	log_event "Successfully downloaded Composer setup script" "ok"
#else
#	log_event "Unable to download Composer setup script!" "fail"
#fi

#if(php -r "if (hash('SHA384', file_get_contents('composer-setup.php')) === '$COMPOSER_SIG') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;")
#then
#	log_event "Successfully verified Composer file integrity" "ok"
#else
#	log_event "Unable to verify Composer file integrity!" "fail"
#fi

#if(php composer-setup.php --install-dir=/usr/local/bin --filename=composer)
#then
#	log_event "Successfully downloaded and set up Composer framework" "ok"
#else
#	log_event "Unable to set up Composer framework!" "fail"
#fi

#if(php -r "unlink('composer-setup.php');")
#then
#	log_event "Successfully deleted Composer setup script" "ok"
#else
#	log_event "Unable to delete Composer setup script!" "fail"
#fi

## Add auth.json to enable tokens and authentication to GitHub
#import_config $(find_file "auth.json") "$COMPOSER_AUTH"

## Restart HTTP server
#/etc/LINGON/http
systemctl restart apache2
