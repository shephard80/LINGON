#!/bin/bash
######################################################
## DNS services (PowerDNS)
PDNS_DIR="/etc/powerdns"
PDNS_CONFIG="$PDNS_DIR/pdns.conf"
PDNS_SQL="$PDNS_DIR/pdns.d/gmysql.conf"

## Set default config in Debian, preseed
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/mysql/admin-user" "string" "$MYSQL_USER"
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/mysql/admin-pass" "password" "$MYSQL_PASSWD"
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/internal/skip-preseed" "boolean" "true"
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/internal/reconfiguring" "boolean" "false"
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/dbconfig-install" "boolean" "false"
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/dbconfig-reinstall" "boolean" "false"
pre_seed "pdns-backend-mysql" "pdns-backend-mysql/dbconfig-upgrade" "boolean" "false"

install_pkg pdns-server
install_pkg pdns-backend-mysql

## Clear old config files to avoid confusion
rm -f /etc/powerdns/bindbackend.conf
rm -f /etc/powerdns/pdns.d/*

## Update PowerDNS main config file
replace_line "# distributor-threads=3" "distributor-threads=2" "$PDNS_CONFIG"
replace_line "launch=" "#launch=" "$PDNS_CONFIG"
replace_line "# soa-refresh-default=10800" "soa-refresh-default=14400" "$PDNS_CONFIG"
replace_line "# disable-axfr=no" "disable-axfr=yes" "$PDNS_CONFIG"

## Import PowerDNS SQL config file
import_config $(find_file "powerdns.conf") "$PDNS_SQL"

## Update PowerDNS SQL config file
replace_line "gmysql-host=" "gmysql-host=localhost" "$PDNS_SQL"
replace_line "gmysql-dbname=" "gmysql-dbname=hosting" "$PDNS_SQL"
replace_line "gmysql-user=" "gmysql-user=$MYSQL_USER" "$PDNS_SQL"
replace_line "gmysql-password=" "gmysql-password=$MYSQL_PASSWD" "$PDNS_SQL"

## Restart PowerDNS server
systemctl restart pdns

######################################################
## DNSSEC stuff
######################################################
## Secure the default domain
pdnsutil secure-zone "$DOMAIN_NAME"

if [ $? ]
then
	log_event "$DOMAIN_NAME is now a secure DNSSEC zone" "ok"
else
	log_event "Domain $DOMAIN_NAME securing failed!" "failed"
	exit 0;
fi

pdnsutil rectify-zone "$DOMAIN_NAME"
if [ $? ]
then
	log_event "Domain $DOMAIN_NAME is now rectified" "ok"
else
	log_event "Domain $DOMAIN_NAME failed rectification" "failed"
	exit 0;
fi
