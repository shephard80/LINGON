######################################################################
#                    MAIN CONFIGURATION SETTINGS FOR EXIM            #
######################################################################

## MySQL connection config
hide mysql_servers =

## Define MySQL macros
MYSQL_GID			= SELECT gid FROM mailuser WHERE username = '${quote_mysql:$local_part}@${quote_mysql:$domain}'
MYSQL_UID			= SELECT uid FROM mailuser WHERE username = '${quote_mysql:$local_part}@${quote_mysql:$domain}'
MYSQL_PASSWD		= SELECT password FROM mailuser WHERE username = '${quote_mysql:$local_part}@${quote_mysql:$domain}'
MYSQL_USER          = SELECT username FROM mailuser WHERE username = '${quote_mysql:$local_part}@${quote_mysql:$domain}'
MYSQL_PLAIN_PW  	= SELECT password FROM mailuser WHERE password = (SELECT SHA2(CONCAT('${quote_mysql:$auth3}', (SELECT salt FROM mailuser WHERE username = '${quote_mysql:$auth2}')), 256) AS hash);
MYSQL_LOGIN_PW  	= SELECT password FROM mailuser WHERE password = (SELECT SHA2(CONCAT('${quote_mysql:$auth2}', (SELECT salt FROM mailuser WHERE username = '${quote_mysql:$auth1}')), 256) AS hash);
MYSQL_PLAIN_HASH    = SELECT SHA2(CONCAT('${quote_mysql:$auth3}', (SELECT salt FROM mailuser WHERE username = '${quote_mysql:$auth2}')), 256) AS hash
MYSQL_LOGIN_HASH    = SELECT SHA2(CONCAT('${quote_mysql:$auth2}', (SELECT salt FROM mailuser WHERE username = '${quote_mysql:$auth1}')), 256) AS hash
MYSQL_PLAIN_USER    = SELECT username FROM mailuser WHERE username = '${quote_mysql:$auth2}'
MYSQL_LOGIN_USER    = SELECT username FROM mailuser WHERE username = '${quote_mysql:$auth1}'
VIRTUAL_DOMAIN		= SELECT domain_name FROM domain_data WHERE domain_name = '${quote_mysql:$domain}'

primary_hostname	=
smtp_banner			= Welcome to $smtp_active_hostname ESMTP server
disable_ipv6		= true

domainlist local_domains = ${lookup mysql{VIRTUAL_DOMAIN}}
domainlist relay_domains = ${lookup mysql{VIRTUAL_DOMAIN}}
hostlist   relay_hosts =
hostlist   auth_relay_hosts = *

## ACLs to use
acl_smtp_helo = acl_check_helo
acl_smtp_rcpt = acl_check_rcpt
acl_smtp_data = acl_check_spam

av_scanner = cmdline:/usr/bin/clamscan --quiet --stdout %s:FOUND:(.*)
spamd_address = 127.0.0.1 11333 variant=rspamd

## SSL/TLS specific options
tls_advertise_hosts = *
tls_certificate =
tls_privatekey =

## Authentication specific options
auth_advertise_hosts = *

## Ports to listen on
daemon_smtp_ports = 25 : 587
#tls_on_connect_ports = 465

never_users = root

## Do a reverse DNS lookup
host_lookup = *

## The next two lines are concerned with ident callbacks, as defined by RFC 1413
rfc1413_hosts = *
rfc1413_query_timeout = 0s

## This line enables an efficiency SMTP option. 
## It is negotiated by clients and not expected to cause problems but can be disabled if needed.
prdr_enable = true

## Remove undelivered messages after 7 days
ignore_bounce_errors_after = 2d
timeout_frozen_after = 7d

## Log settings
log_file_path = syslog
syslog_duplication = false
log_selector = +all

######################################################################
#                       ACL CONFIGURATION                            #
#         Specifies access control lists for incoming SMTP mail      #
######################################################################
begin acl

######################################################################
acl_check_helo:

  # HELO is an open Proxy or Subnet
  drop	message		= Open Proxy in HELO/EHLO (HELO was $sender_helo_name)
		condition	= ${if eqi {$sender_helo_name} {$sender_host_address}{no}{yes}}
		condition	= ${if isip {$sender_helo_name} {yes}{no}}
		delay		= 45s

  # HELO is an IP address
#  drop	condition	= ${if isip{$sender_helo_name}}
#		message		= Access denied - Invalid HELO name (See RFC2821 4.1.3)

  # HELO contain my domains, subdomains or my interface by dns lookup 
#  drop  message	= No you are not ME or OURS (HELO was $sender_helo_name and equal my local domains or my domains relay)
#        condition	= ${if match_domain{$sender_helo_name}{+local_domains:+relay_domains}{yes}{no}}
#        delay		= 45s
#  drop  message	= No you are not Me or OURS (HELO was $sender_helo_name and the subdomain is my domain ${extract{-3}{.}{$sender_helo_name}}.${extract{-2}{.}{$sender_helo_name}}.${extract{-1}{.}{$sender_helo_name}})
#        condition	= ${if match_domain{${extract{-3}{.}{$sender_helo_name}}.${extract{-2}{.}{$sender_helo_name}}.${extract{-1}{.}{$sender_helo_name}}}{+local_domains:+relay_domains}{yes}{no}}
#        delay		= 45s
#  drop  message	= No you are not ME or OURS (HELO was $sender_helo_name and equal my interface hostname)
#        condition	= ${if !def:interface_address {no}{yes}}
#        condition	= ${if match_ip{$interface_address}{${lookup dnsdb{>: defer_never,a=$sender_helo_name}}} {yes}{no}}
#        delay		= 45s
  
  # HELO is my hostname
#  drop  message	= "REJECTED - Bad HELO - Host impersonating [$sender_helo_name]"
#        condition	= ${if match{$sender_helo_name}{$primary_hostname}}

  accept

######################################################################
acl_check_rcpt:

  # Deny unless the sender address can be verified.
  deny		message	= Sender verification failed
			!verify	= sender

  # Accept if the message arrived over an authenticated connection, from
  # any host. Again, these messages are usually from MUAs, so recipient
  # verification is omitted, and submission mode is set. And again, we do this
  # check before any black list tests.
  accept	authenticated	= *
			control	= submission/sender_retain
			control	= dkim_disable_verify

  # Insist that any other recipient address that we accept is either in one of
  # our local domains, or is in a domain for which we explicitly allow
  # relaying. Any other domain is rejected as being unacceptable for relaying.
  require	message	= relay not permitted
			domains	= +local_domains : +relay_domains

  # We also require all accepted addresses to be verifiable. This check will
  # do local part verification for local domains, but only check the domain
  # for remote domains.
  require	verify	= recipient

  # Accept if the address is in a domain for which we are an incoming relay,
  # but again, only if the recipient can be verified.
  accept	domains	= +local_domains : +relay_domains
			endpass
			verify	= recipient

  # At this point, the address has passed all the checks that have been
  # configured, so we accept it unconditionally.
  accept

######################################################################
acl_check_spam:

  # do not scan messages submitted from our own hosts
#  accept hosts = +relay_hosts

  # do not scan messages from submission port
#  accept condition = ${if eq{$interface_port}{587}}

  # skip scanning for authenticated users
  accept authenticated = *

  # add spam-score and spam-report header when told by rspamd
  warn  spam = nobody:true
        condition = ${if eq{$spam_action}{add header}}
        add_header = X-Spam-Score: $spam_score ($spam_bar)
        add_header = X-Spam-Report: $spam_report

  # use greylisting avalible in rspamd
  defer message = Please try again later
		condition = ${if eq{$spam_action}{soft_reject}}
		 
  deny  message = Message discarded as high-probability spam
		condition = ${if eq{$spam_action}{reject}}

  accept

######################################################################
#                      ROUTERS CONFIGURATION                         #
#               Specifies how addresses are handled                  #
######################################################################
#     THE ORDER IN WHICH THE ROUTERS ARE DEFINED IS IMPORTANT!       #
# An address is passed to each router in turn until it is accepted.  #
######################################################################

begin routers

## This router routes addresses that are not in local domains by 
## doing a DNS lookup on the domain name.
dnslookup:
  driver = dnslookup
  domains = ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
  no_more

## This router check that we have the /home/hosting/ dir structure and
## makes sure the correct ownership is set. Then check if the virtual 
## e-mail address is present in database. If it is then continue to 
## the mysql_virtual_delivery transport.
mysql_virtual_user:
  driver                = accept
  domains               = +local_domains
  condition             = ${run{/bin/bash -c "mkdir -p -m 755 /home/hosting"}{yes}{yes}}
  condition             = ${run{/bin/bash -c "chown root:root /home/hosting"}{yes}{yes}}
  condition             = ${run{/bin/bash -c "mkdir -p -m 755 /home/hosting/$domain"}{yes}{yes}}
  condition             = ${run{/bin/bash -c "chown ${lookup mysql{MYSQL_UID}}:${lookup mysql{MYSQL_GID}} /home/hosting/$domain"}{yes}{yes}}
  condition             = ${if eq{${lookup mysql{MYSQL_USER}}}{$local_part@$domain}}
  transport             = mysql_virtual_delivery
  no_more

######################################################################
#                      TRANSPORTS CONFIGURATION                      #
######################################################################
#                       ORDER DOES NOT MATTER                        #
#     Only one appropriate transport is called for each delivery.    #
######################################################################

begin transports

remote_smtp:
  driver = smtp

mysql_virtual_delivery:
  driver                = appendfile
  create_directory      = true
  directory             = /home/hosting/${domain}/mail/${local_part}
  maildir_format
  user                  = ${lookup mysql{MYSQL_UID}}
  group                 = ${lookup mysql{MYSQL_GID}}

# This transport is used for handling deliveries directly to files that are
# generated by aliasing or forwarding.
address_file:
  driver = appendfile
  delivery_date_add
  envelope_to_add
  return_path_add

######################################################################
#                      RETRY CONFIGURATION                           #
######################################################################

begin retry

# Address or Domain    Error       Retries
*                      *           F,2h,15m; G,16h,1h,1.5; F,4d,6h

######################################################################
#                   AUTHENTICATION CONFIGURATION                     #
######################################################################

begin authenticators

## PLAIN & LOGIN authentication driver
plain:
  driver			= plaintext
  public_name		= PLAIN
  server_prompts	= :
  server_condition	= "${if \
						and { \
                            {!eq {$auth2}{}} \
                            {!eq {$auth3}{}} \
                            {eq {${lookup mysql{MYSQL_PLAIN_HASH}}}{${lookup mysql{MYSQL_PLAIN_PW}}}} \
                            {eq {$auth2}{${lookup mysql{MYSQL_PLAIN_USER}}}} \
                            } \
						{yes}{no}}"
  server_advertise_condition = ${if eq{tls_in_cipher}{}{no}{yes}}
  server_set_id		= $2

login:
  driver			= plaintext
  public_name		= LOGIN
  server_prompts	= "Username:: : Password::"
  server_condition	= "${if \
						and { \
                            {!eq {$auth1}{}} \
                            {!eq {$auth2}{}} \
                            {eq {${lookup mysql{MYSQL_LOGIN_HASH}}}{${lookup mysql{MYSQL_LOGIN_PW}}}} \
                            {eq {$auth1}{${lookup mysql{MYSQL_LOGIN_USER}}}} \
                            } \
						{yes}{no}}"
  server_advertise_condition = ${if eq{tls_in_cipher}{}{no}{yes}}
  server_set_id 	= $1
