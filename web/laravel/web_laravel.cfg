#!/bin/bash
## Author: Sebastian Mueller, shephard@orbitxp.com
## Released under GNU License v3
##
PROJECT_NAME="laravel"
#COMPOSER_SIG=$(curl "https://composer.github.io/installer.sig")

## Download Composer framework for Laravels dependencies
#if(php -r "readfile('https://getcomposer.org/installer');" > composer-setup.php)
#then
#  log_event "Successfully downloaded Composer setup script" "ok"
#else
#  log_event "Unable to download Composer setup script!" "fail"
#fi

#if(php -r "if (hash('SHA384', file_get_contents('composer-setup.php')) === '$COMPOSER_SIG') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;")
#then
#  log_event "Successfully verified Composer file integrity" "ok"
#else
# log_event "Unable to verify Composer file integrity!" "fail"
#fi

#if(php composer-setup.php --install-dir=/usr/local/bin --filename=composer)
#then
#  log_event "Successfully downloaded and set up Composer framework" "ok"
#else
#  log_event "Unable to set up Composer framework!" "fail"
#fi

#if(php -r "unlink('composer-setup.php');")
#then
#  log_event "Successfully deleted Composer setup script" "ok"
#else
#  log_event "Unable to delete Composer setup script!" "fail"
#fi

## Install Laravel framework if not already installed
if [ ! -e "$WEB_DIR/$PROJECT_NAME" ]
then
  if(composer --working-dir="$WEB_DIR" create-project --prefer-dist laravel/laravel laravel)
  then
    log_event "Composer successfully set up laravel" "ok"
  else
    log_event "Unable to set up project laravel" "fail"
  fi

  ## Create a new application in Laravel framework and set namespace
  if(php "$WEB_DIR/$PROJECT_NAME/artisan" app:name "$PROJECT_NAME")
  then
    log_event "Successfully set namespace in project $PROJECT_NAME" "ok"
  else
    log_event "Unable to set namespace for project $PROJECT_NAME" "fail"
  fi

  ## Rename the .env.example file
  mv "$WEB_DIR/$PROJECT_NAME/.env.example" "$WEB_DIR/$PROJECT_NAME/.env"

  ## Create a new application encryption key
  if(php "$WEB_DIR/$PROJECT_NAME/artisan" key:generate)
  then
    log_event "Successfully generated new encryption key" "ok"
  else
    log_event "Unable to generate a new encryption key" "fail"
  fi

else
  log_event "Laravel framework/project is already installed in '$WEB_DIR/$PROJECT_NAME'" "info"
fi

## Add package for creating common HTML and form elements in Laravel 5 if not already exists
#if(find_string_in_file "laravelcollective/html" "$WEB_DIR/laravel/composer.json")
#then
#  log_event "laravelcollective/html already exists in project $WEB_DIR/laravel" "warn"
#else
#  if(cat "$WEB_DIR/laravel/composer.json" | jq '."require" |= .+ {"laravelcollective/html": "5.2.*"}')
#  then
#    composer --working-dir="$WEB_DIR/laravel/" update
#    log_event "Successfully updated JSON file composer.json" "ok"
#  else
#    log_event "Unable to update JSON file" "fail"
#  fi

#  if(composer --working-dir="$WEB_DIR/laravel/" require "laravelcollective/html=5.2.*")
#  then
#    log_event "Successfully added common HTML and form elements" "ok"
#  else
#    log_event "Unable to add common HTML and form elements" "fail"
#  fi
#  add_line "Illuminate\Auth\AuthServiceProvider::class," "Collective\Html\HtmlServiceProvider::class," "$WEB_DIR/laravel/config/app.php"
#  add_line "'View' => Illuminate\Support\Facades\View::class," "'Form' => Collective\Html\FormFacade::class," "$WEB_DIR/laravel/config/app.php"
#  add_line "'View' => Illuminate\Support\Facades\View::class," "'Html' => Collective\Html\HtmlFacade::class," "$WEB_DIR/laravel/config/app.php"
#fi

## Install authentication layer into the application
#if(php "$WEB_DIR/laravel/artisan" make:auth)
#then
#	log_event "Successfully added authentication layer into application $PROJECT_NAME" "ok"
#else
#	log_event "Unable to add authentication layer into application $PROJECT_NAME!" "fail"
#fi

## Add authentication controller to application
#if(php "$WEB_DIR/laravel/artisan" make:controller "$PROJECT_NAMEController")
#then
#	log_event "Successfully added authentication controller into application $PROJECT_NAME" "ok"
#else
#	log_event "Unable to add authentication controller into application $PROJECT_NAME!" "fail"
#fi

## Install Laravel PHP files in $WEB_DIR
#import_config $(find_file "Domain_contact.php") "$WEB_DIR/$PROJECT_NAME/app/Domain_contact.php"
#import_config $(find_file "Domain_data.php") "$WEB_DIR/$PROJECT_NAME/app/Domain_data.php"
#import_config $(find_file "domains.blade.php") "$WEB_DIR/$PROJECT_NAME/resources/views/domains.blade.php"
#import_config $(find_file "users.blade.php") "$WEB_DIR/$PROJECT_NAME/resources/views/users.blade.php"
#import_config $(find_file "routes.php") "$WEB_DIR/$PROJECT_NAME/app/Http/routes.php"
#import_config $(find_file "HostingController.php") "$WEB_DIR/$PROJECT_NAME/app/Http/Controllers/HostingController.php"

## Change config variables in our new app
replace_string "DB_DATABASE=homestead" "DB_DATABASE=$MYSQL_DB" "$WEB_DIR/$PROJECT_NAME/.env"
replace_string "DB_USERNAME=homestead" "DB_USERNAME=$MYSQL_USER" "$WEB_DIR/$PROJECT_NAME/.env"
replace_string "DB_PASSWORD=secret" "DB_PASSWORD=$MYSQL_PASSWD" "$WEB_DIR/$PROJECT_NAME/.env"
replace_string "MAIL_PORT=" "MAIL_PORT=587" "$WEB_DIR/$PROJECT_NAME/.env"
replace_string "MAIL_USERNAME=" "MAIL_USERNAME=$MYSQL_PASSWD" "$WEB_DIR/$PROJECT_NAME/.env"
replace_string "MAIL_PASSWORD=" "MAIL_PASSWORD=$MYSQL_PASSWD" "$WEB_DIR/$PROJECT_NAME/.env"
replace_string "MAIL_ENCRYPTION=" "MAIL_ENCRYPTION=" "$WEB_DIR/$PROJECT_NAME/.env"

## Change file permissions on Laravel files and dirs
setDirPermissions "$WEB_DIR/$PROJECT_NAME/" "www-data:www-data" "755"
